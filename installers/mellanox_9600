#!/bin/sh
#
#  Copyright (C) 2019 Alexander Petrovskiy <alexpe@nvidia.com>
#
#  SPDX-License-Identifier: GPL-2.0
#
#  ONIE Installer script for Ubuntu customized image
#

CSUM="__CSUM__"
CSUMCMD=sha256sum
COMPRESS="xz"
THDD="/dev/sda"
PNUM=3
TDEV="$THDD$PNUM"
TLABEL="NOSU"
TDIR=`mktemp -d`
ONIE_CHECK="$(sgdisk /dev/sda -i 2 | grep 'ONIE-BOOT')"
PDEL="$(sgdisk -p /dev/sda | grep -oE '^[[:blank:]]+[[:digit:]]+' | awk '$1>2{print$1}')"
CONSOLE_SPEED=9600
ONIE_GRUB_CONF="/mnt/onie-boot/grub/grub.cfg"
IMG_GRUB_CONF="$TDIR/etc/default/grub"

cleanup() {
    umount ${TDIR}/proc; umount ${TDIR}/sys; umount ${TDIR}/dev
    sleep 1
    umount $TDIR > /dev/null 2>&1
    rm -rf $TDIR
}

fail() {
    [ "$1" != "" ] && echo $1
    exit 1
}

update_console_speed()
{
    cur_speed=$1
    new_speed=$2
    echo "Updating switch console speed to $new_speed..."
    sed -i "s/$cur_speed/$new_speed/g" "$IMG_GRUB_CONF"
    [ $? -ne 0 ] && return $?
    sed -i "s/$cur_speed/$new_speed/g" "$ONIE_GRUB_CONF"
    return $?
}

get_bios_cpu_family()
{
    pname=$(dmidecode -s system-product-name)
    case $pname in
      MSN2100|MSN2010)
        echo "AtomRangeley"
        ;;
      MSN2410|MSN2700)
        echo "IvyBridge"
        ;;
      MSN3700|MSN3700C|MSN3420|MSN3510|MSN4700|MSN4600|MSN4600C|MSN4410)
        echo "Broadwell"
        ;;
      *)
        echo ""
        ;;
    esac
}


update_bios()
{
    rom_file=$1
    bios_update.sh "$rom_file" params
    return $?
}

DATA="sed -e '1,/^__DATA__$/d' '$0'"
[ $? -ne 0 ] && fail "Error reading image! Exiting..."
test `eval $DATA | $CSUMCMD -b | cut -d " " -f 1` = $CSUM || fail "Checksum error! Exiting..."

# Stop if ONIE is not installed on local disk
[ -z "$ONIE_CHECK" ] && fail "E: No ONIE partition found on $THDD. Exiting..."

echo "I: Starting installer..."

if [ ! -z "$PDEL" ]; then 
    echo "I: Deleting old partitions: "$PDEL
    for part in $PDEL; do
        sgdisk $THDD -d $part
        sleep 1
    done
fi

echo "I: Creating partition..."
partprobe $THDD
sgdisk -N $PNUM -A $PNUM:set:2 -t $PNUM:8300 -c $PNUM:"$TLABEL" $THDD
[ $? -ne 0 ] && fail "Error creating root partition! Exiting..." 
partprobe $THDD

echo "I: Creating filesystem..."
mke2fs -t ext4 -m5 -L $TLABEL -j -F $TDEV

mount -t ext4 $TDEV $TDIR
[ $? -ne 0 ] && fail "Error mounting root partition! Exiting..." 

if [ "$COMPRESS" = "xz" ]; then
    DECOMPRESS="xz -cd"
else
    DECOMPRESS="gzip -cd"
fi

echo "I: Extracting installer rootfs..."
sed -re '1,/^__DATA__$/d' < "$0" \
| eval "$DECOMPRESS" \
| tar -C "$TDIR" -x
[ $? -ne 0 ] && fail "Error extracting rootfs! Exiting..." 

cp -a /dev/sd* "$TDIR/dev/"

# GET UBUNTU RELEASE INFORMATION
echo "I: Checking Ubuntu Version..."
. "$TDIR/etc/os-release"
if [ "$VERSION_ID" = "18.04" ] || [ "$VERSION_ID" = "18.10" ]
then
    echo "I: Ubuntu $VERSION_ID is detected"
else
    fail "Unsupported Ubuntu version: $VERSION_ID"
fi

# RECONFIGURE OS
echo "I: Reconfiguring OS..."

# MOUNT VIRTUAL FS
mkdir -pv ${TDIR}/{dev,proc,sys}
mount -vt proc proc ${TDIR}/proc
mount -vt sysfs sysfs ${TDIR}/sys
mknod -m 600 ${TDIR}/dev/console c 5 1
mknod -m 666 ${TDIR}/dev/null c 1 3
mount -v -o bind /dev ${TDIR}/dev
mount -f -vt tmpfs tmpfs ${TDIR}/dev/shm
mount -f -vt devpts -o gid=4,mode=620 devpts ${TDIR}/dev/pts

# UPDATE CONSOLE SPEED
CUR_SPEED=$(sed -n -r 's/^.*--speed=([[:digit:]]+).*$/\1/p' "$ONIE_GRUB_CONF")
if [ $CONSOLE_SPEED != $CUR_SPEED ]; then
    echo "I: Updating switch console speed to $CONSOLE_SPEED..."
    update_console_speed "$CUR_SPEED" "$CONSOLE_SPEED"
    if [ $? -eq 0 ]; then
        echo "ONIE console speed was updated successfully!"
        CPU=$(get_bios_cpu_family)
        if [ ! -z "$CPU" ]; then
            echo "Updating BIOS console speed for CPU $CPU..."
            ROM_PATH="$TDIR/opt/mlx/bios/$CPU"
	    ROM_FILE="$ROM_PATH/$CONSOLE_SPEED/$(head -n 1 "$ROM_PATH/latest.txt" 2> /dev/null)"
            if [ -f "$ROM_FILE" ]; then
                update_bios $ROM_FILE
                [ ! -z "$?" ] && echo "BIOS console speed was updated successfully!" || echo "Error updating BIOS console speed..."
            else
                echo "BIOS ROM file not found: $ROM_FILE"
            fi
        else
           echo "Can't detect switch CPU Family. Skipping BIOS console speed update..."
        fi
    else
        echo "Can't update console speed. Skipping..."
    fi
fi

# BOOTLOADER INSTALLATION
echo "I: Installing GRUB2..."
chroot "$TDIR" sh -c 'update-initramfs -u; grub-install /dev/sda; update-grub'

#sync
echo "I: Cleaning up..."
cleanup

echo "I: Installation finished!"
exit 0
